
bin\Debug\PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000017a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .fuse         00000003  00820000  00820000  000001ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000020  00000000  00000000  000001f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000038  00000000  00000000  00000211  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000002f7  00000000  00000000  00000249  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000014d  00000000  00000000  00000540  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000274  00000000  00000000  0000068d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000020  00000000  00000000  00000904  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000e9  00000000  00000000  00000924  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000090  00000000  00000000  00000a0d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000048  00000000  00000000  00000a9d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 bb 00 	jmp	0x176	; 0x176 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <avr/io.h>
#include<util/delay.h>

int main(void)
{
  80:	ef 92       	push	r14
  82:	ff 92       	push	r15
  84:	0f 93       	push	r16
  86:	1f 93       	push	r17
  88:	cf 93       	push	r28
  8a:	df 93       	push	r29

    TCCR1A |= (1 << COM1A1) | (1 << WGM11) | (1 << WGM10);
  8c:	80 91 80 00 	lds	r24, 0x0080
  90:	83 68       	ori	r24, 0x83	; 131
  92:	80 93 80 00 	sts	0x0080, r24
    TCCR1B |= (1 << WGM12) | (1<< CS11) | (1 << CS10);
  96:	80 91 81 00 	lds	r24, 0x0081
  9a:	8b 60       	ori	r24, 0x0B	; 11
  9c:	80 93 81 00 	sts	0x0081, r24
    DDRB |= (1 << PB1);
  a0:	21 9a       	sbi	0x04, 1	; 4

    while(1){
            OCR1A = 100;
  a2:	64 e6       	ldi	r22, 0x64	; 100
  a4:	70 e0       	ldi	r23, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  a6:	40 e9       	ldi	r20, 0x90	; 144
  a8:	51 e0       	ldi	r21, 0x01	; 1
  aa:	e0 e9       	ldi	r30, 0x90	; 144
  ac:	f1 e0       	ldi	r31, 0x01	; 1
            _delay_ms(200);
            OCR1A = 250;
  ae:	aa ef       	ldi	r26, 0xFA	; 250
  b0:	b0 e0       	ldi	r27, 0x00	; 0
            _delay_ms(200);
            OCR1A = 400;
            _delay_ms(200);
            OCR1A = 650;
  b2:	ca e8       	ldi	r28, 0x8A	; 138
  b4:	d2 e0       	ldi	r29, 0x02	; 2
            _delay_ms(200);
            OCR1A = 900;
  b6:	04 e8       	ldi	r16, 0x84	; 132
  b8:	13 e0       	ldi	r17, 0x03	; 3
            _delay_ms(200);
            OCR1A = 1024;
  ba:	e1 2c       	mov	r14, r1
  bc:	84 e0       	ldi	r24, 0x04	; 4
  be:	f8 2e       	mov	r15, r24
    TCCR1A |= (1 << COM1A1) | (1 << WGM11) | (1 << WGM10);
    TCCR1B |= (1 << WGM12) | (1<< CS11) | (1 << CS10);
    DDRB |= (1 << PB1);

    while(1){
            OCR1A = 100;
  c0:	70 93 89 00 	sts	0x0089, r23
  c4:	60 93 88 00 	sts	0x0088, r22
  c8:	20 e0       	ldi	r18, 0x00	; 0
  ca:	30 e0       	ldi	r19, 0x00	; 0
  cc:	ca 01       	movw	r24, r20
  ce:	01 97       	sbiw	r24, 0x01	; 1
  d0:	f1 f7       	brne	.-4      	; 0xce <main+0x4e>
  d2:	2f 5f       	subi	r18, 0xFF	; 255
  d4:	3f 4f       	sbci	r19, 0xFF	; 255
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  d6:	87 e0       	ldi	r24, 0x07	; 7
  d8:	20 3d       	cpi	r18, 0xD0	; 208
  da:	38 07       	cpc	r19, r24
  dc:	b9 f7       	brne	.-18     	; 0xcc <main+0x4c>
            _delay_ms(200);
            OCR1A = 250;
  de:	b0 93 89 00 	sts	0x0089, r27
  e2:	a0 93 88 00 	sts	0x0088, r26
  e6:	20 e0       	ldi	r18, 0x00	; 0
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	ca 01       	movw	r24, r20
  ec:	01 97       	sbiw	r24, 0x01	; 1
  ee:	f1 f7       	brne	.-4      	; 0xec <main+0x6c>
  f0:	2f 5f       	subi	r18, 0xFF	; 255
  f2:	3f 4f       	sbci	r19, 0xFF	; 255
  f4:	87 e0       	ldi	r24, 0x07	; 7
  f6:	20 3d       	cpi	r18, 0xD0	; 208
  f8:	38 07       	cpc	r19, r24
  fa:	b9 f7       	brne	.-18     	; 0xea <main+0x6a>
            _delay_ms(200);
            OCR1A = 400;
  fc:	f0 93 89 00 	sts	0x0089, r31
 100:	e0 93 88 00 	sts	0x0088, r30
 104:	20 e0       	ldi	r18, 0x00	; 0
 106:	30 e0       	ldi	r19, 0x00	; 0
 108:	ca 01       	movw	r24, r20
 10a:	01 97       	sbiw	r24, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <main+0x8a>
 10e:	2f 5f       	subi	r18, 0xFF	; 255
 110:	3f 4f       	sbci	r19, 0xFF	; 255
 112:	87 e0       	ldi	r24, 0x07	; 7
 114:	20 3d       	cpi	r18, 0xD0	; 208
 116:	38 07       	cpc	r19, r24
 118:	b9 f7       	brne	.-18     	; 0x108 <main+0x88>
            _delay_ms(200);
            OCR1A = 650;
 11a:	d0 93 89 00 	sts	0x0089, r29
 11e:	c0 93 88 00 	sts	0x0088, r28
 122:	20 e0       	ldi	r18, 0x00	; 0
 124:	30 e0       	ldi	r19, 0x00	; 0
 126:	ca 01       	movw	r24, r20
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <main+0xa8>
 12c:	2f 5f       	subi	r18, 0xFF	; 255
 12e:	3f 4f       	sbci	r19, 0xFF	; 255
 130:	87 e0       	ldi	r24, 0x07	; 7
 132:	20 3d       	cpi	r18, 0xD0	; 208
 134:	38 07       	cpc	r19, r24
 136:	b9 f7       	brne	.-18     	; 0x126 <main+0xa6>
            _delay_ms(200);
            OCR1A = 900;
 138:	10 93 89 00 	sts	0x0089, r17
 13c:	00 93 88 00 	sts	0x0088, r16
 140:	20 e0       	ldi	r18, 0x00	; 0
 142:	30 e0       	ldi	r19, 0x00	; 0
 144:	ca 01       	movw	r24, r20
 146:	01 97       	sbiw	r24, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <main+0xc6>
 14a:	2f 5f       	subi	r18, 0xFF	; 255
 14c:	3f 4f       	sbci	r19, 0xFF	; 255
 14e:	87 e0       	ldi	r24, 0x07	; 7
 150:	20 3d       	cpi	r18, 0xD0	; 208
 152:	38 07       	cpc	r19, r24
 154:	b9 f7       	brne	.-18     	; 0x144 <main+0xc4>
            _delay_ms(200);
            OCR1A = 1024;
 156:	f0 92 89 00 	sts	0x0089, r15
 15a:	e0 92 88 00 	sts	0x0088, r14
 15e:	20 e0       	ldi	r18, 0x00	; 0
 160:	30 e0       	ldi	r19, 0x00	; 0
 162:	ca 01       	movw	r24, r20
 164:	01 97       	sbiw	r24, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <main+0xe4>
 168:	2f 5f       	subi	r18, 0xFF	; 255
 16a:	3f 4f       	sbci	r19, 0xFF	; 255
 16c:	87 e0       	ldi	r24, 0x07	; 7
 16e:	20 3d       	cpi	r18, 0xD0	; 208
 170:	38 07       	cpc	r19, r24
 172:	b9 f7       	brne	.-18     	; 0x162 <main+0xe2>
 174:	a5 cf       	rjmp	.-182    	; 0xc0 <main+0x40>

00000176 <_exit>:
 176:	f8 94       	cli

00000178 <__stop_program>:
 178:	ff cf       	rjmp	.-2      	; 0x178 <__stop_program>
